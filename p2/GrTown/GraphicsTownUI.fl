# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
do_not_include_H_from_C 
header_name {.H} 
code_name {.cxx}
decl {// $Header: /p/course/cs559-gleicher/private/CVS/GrTown/GraphicsTownUI.fl,v 1.4 2008/11/14 19:53:30 gleicher Exp $} {private local
} 

comment {Note: this user interface (.cxx and .h) was created
automatically by running fluid on the ".fl" file
you should not edit the .cxx or .h file!

Use "fluid" to edit the UI interactively} {in_source in_header
} 

decl {// CS559 Graphics Town} {private local
} 

decl {\#include "GrTown_PCH.H"} {private local
} 

decl {\#include "GraphicsTownUI.H"} {private local
} 

decl {\#include "GrObjectVBO.h"} {private local
} 

decl {\#include "TownViewWidget.H"} {public local
} 

decl {\#include "World.h"} {private local
} 

decl {using std::vector;} {private local
} 

class GraphicsTownUI {open
} {
  Function {make_window()} {open
  } {
    Fl_Window window {
      label {CS559 - Toy Town} open
      xywh {116 116 1248 688} type Double labelsize 12 resizable visible
    } {
      Fl_Box townView {
        xywh {5 5 1024 710} align 2 resizable
        code0 {o->ui = this;}
        class TownViewWidget
      }
      Fl_Group {} {open
        xywh {1020 5 220 700}
      } {
        Fl_Browser pickCamera {
          label view
          callback {pickInteresting->deselect();}
          xywh {1080 5 155 165} type Hold
          code0 {for(vector<GrObjectVBO*>::iterator g=theVBOobjects.begin(); g != theVBOobjects.end(); ++g)}
          code1 {if((*g)->ridable) o->add((*g)->name.c_str(),*g);}
        }
        Fl_Value_Slider time {
          label {Time of Day (24hr)}
          callback {townView->damage(1);}
          xywh {1090 470 115 20} type {Horz Knob} maximum 24 step 1 value 9
        }
        Fl_Value_Slider fov {
          label FoV
          callback {townView->damage(1);}
          xywh {1215 430 15 75} minimum 1 maximum 180 step 1 value 45
        }
        Fl_Value_Output rate {
          label {frame rate}
          xywh {1185 520 50 25} maximum 100 step 0.1
        }
        Fl_Value_Slider speedup {
          label speedup
          xywh {1150 550 85 25} type Horizontal align 4 maximum 3 step 0.2 value 1
        }
        Fl_Browser pickInteresting {
          label sights
          callback {pickCamera->deselect();}
          xywh {1080 225 155 165} type Hold
          code0 {for(vector<GrObjectVBO*>::iterator g=theVBOobjects.begin(); g != theVBOobjects.end(); ++g)}
          code1 {if((*g)->interesting) o->add((*g)->name.c_str(),*g);}
        }
        Fl_Button {} {
          label Fly
          callback {pickCamera->deselect();
pickInteresting->deselect();
townView->damage(1);} selected
          xywh {1120 190 70 25}
        }
        Fl_Value_Slider loopDivision {
          label {Loop Algorithm Division}
          callback {townView->damage(1);}
          xywh {1148 580 87 26} type Horizontal align 132 maximum 4 step 1
        }
        Fl_Value_Slider sorRotation {
          label {SoR Rotation}
          callback {townView->damage(1);}
          xywh {1150 610 85 25} type Horizontal align 4 minimum 1 maximum 180 step 1 value 20
        }
        Fl_Button Eatable {
          label Eatable
          callback {townView->damage(1);}
          xywh {1165 640 75 25} type Toggle when 1
        }
        Fl_Button Physic {
          label Physics
          callback {townView->damage(1);}
          xywh {1085 640 75 25} type Toggle value 1 when 1
        }
      }
    }
  }
} 
